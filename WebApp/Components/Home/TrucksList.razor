@page "/trucklist"

@using WebApp.Components;

<div class="truck-list-container">
    <h2 class="section-title">Автомобили в разборе</h2>
    <div class="truck-list-header">
        <div class="header-controls">
            <div class="search-box">
                <button class="filter-button">Фильтр</button>
                <input type="text" placeholder="Поиск запчастей..." class="search-input" />

                <button class="search-icon" @onclick="Search">
                    <img src="/icons/searchbut.svg" alt="Search" />
                </button>
               
            </div>
        </div>
    </div>

    <div class="truck-grid">
        @foreach (var truck in trucks.Take(visibleCount))
        {
            <div class="truck-card">
                <div class="truck-image-container">
                    <img src="@truck.ImageUrl" alt="@truck.Name" class="truck-image" />
                </div>
                <h3 class="truck-name">@truck.Name</h3>
                <p class="truck-info">@truck.Engine</p>
                <p class="truck-info">@truck.Gearbox</p>
                <p class="truck-info">@truck.Reducer</p>
                <p class="truck-info">@truck.Year</p>
                <button class="details-button">ПОДРОБНЕЕ</button>
            </div>
        }
    </div>

    @if (visibleCount < trucks.Count)
    {
        <div class="load-more-container">
            <button class="load-more-button" @onclick="LoadMore">Посмотреть ещё</button>
        </div>
    }
</div>

<style>
    .truck-list-container {
        padding: 20px;
        background-color: #f9f9f9;
        min-height: 100vh;
    }

    .truck-list-header {
        max-width: 1200px;
        margin: 0 auto;
        display: flex;
        justify-content: space-between;
        align-items: center;
        padding: 0 20px;
    }

    .section-title {
        font-size: 32px;
        font-weight: bold;
        position: relative;
        margin-bottom: 30px;
        text-align: center;
    }

        .section-title::after {
            content: "";
            display: block;
            width: 320px;
            height: 3px;
            background: red;
            margin: 5px auto 0;
        }

    .header-controls {
        display: flex;
        gap: 15px;
        align-items: center;
    }

    .search-box {
        position: relative;
        display: flex;
        align-items: center;
    }

    .search-wrapper {
        position: relative;
        display: inline-block;
    }

    .search-input {
        width: 1070px; /* Уменьшена ширина для учета кнопки поиска */
        height: 35px;
        padding: 8px 40px 8px 40px; /* Отступы для кнопки фильтра слева и поиска справа */
        border: 2px solid #DE1919;
        border-radius: 10px;
        background-color: #f1f1f1;
        font-size: 14px;
        outline: none;
        box-sizing: border-box;
    }

        .search-input:focus {
            border-color: #B50000;
            box-shadow: 0 0 0 2px #DE1919;
        }

    .search-icon {
        position: absolute;
        right: 0;
        top: 0;
        height: 100%;
        width: 40px;
        background-color: #DE1919;
        border: none;
        border-radius: 0 10px 10px 0;
        cursor: pointer;
        display: flex;
        align-items: center;
        justify-content: center;
        transition: background-color 0.3s ease;
    }

        .search-icon img {
            width: 20px;
            height: 20px;
            filter: brightness(0) invert(1); 
        }

        .search-icon:hover {
            background-color: #B50000;
        }

    .filter-button {
        background-color: #DE1919;
        width:80px;
        height: 35px;
        color: white;
        padding: 8px 16px;
        border-radius: 10px;
        border: none;
        cursor: pointer;
        transition: background-color 0.3s ease;
        margin-right: 10px;
    }

        .filter-button:hover {
            background-color: #B50000;
        }
    .truck-grid {
        display: grid;
        grid-template-columns: repeat(auto-fill, minmax(300px, 1fr));
        gap: 20px;
        padding: 20px;
        max-width: 1200px;
        margin: 0 auto;
    }

    .truck-card {
        background-color: #fff;
        border-radius: 8px;
        padding: 15px;
        box-shadow: 0 2px 5px rgba(0, 0, 0, 0.1);
        transition: transform 0.3s ease;
        text-align: center;
        display: flex;
        flex-direction: column;
        justify-content: space-between;
        height: 100%;
    }

        .truck-card:hover {
            transform: scale(1.03);
        }

    .truck-image-container {
        width: 100%;
        height: 200px;
        overflow: hidden;
        border-radius: 8px;
    }

    .truck-image {
        width: 100%;
        height: 100%;
        object-fit: cover;
        border-radius: 8px;
    }

    .truck-name {
        
        font-size: 18px;
        text-align: left;
        font-weight: bold;
        color: #333;
        margin: 5px 0;
        margin-top: 20px;
    }

    .truck-info {
        font-size: 14px;
        text-align: left;
        color: #666;
        margin: 5px 0;
    }

    .details-button {
        background-color: #DE1919;
        width: 150px;
        color: white;
        padding: 8px 16px;
        border-radius: 10px;
        border: none;
        cursor: pointer;
        transition: background-color 0.3s ease;
        margin-top: 15px;   
    }

        .details-button:hover {
            background-color: #B50000;
        }

    .load-more-container {
        text-align: center;
        margin-top: 20px;
    }

    .load-more-button {
        background-color: #DE1919;
        color: white;
        padding: 10px 20px;
        border-radius: 20px;
        border: none;
        cursor: pointer;
        transition: background-color 0.3s ease;
        z-index: 10;
    }

        .load-more-button:hover {
            background-color: #B50000;
        }
</style>

@code {
    private int visibleCount = 3;
    private const int LoadMoreStep = 3;

    private List<Truck> trucks = new List<Truck>
    {
        new Truck
        {
            Name = "Название 1",
            ImageUrl = "/images/trucks/truck1.jpg",
            Engine = "Двигатель: ХХХХХХ",
            Gearbox = "Коробка: ХХХХХХ",
            Reducer = "Редуктор: ХХХХХХ",
            Year = "Год: ХХХХХХ"
        },
        new Truck
        {
            Name = "Название 2",
            ImageUrl = "/images/trucks/truck2.jpg",
            Engine = "Двигатель: ХХХХХХ",
            Gearbox = "Коробка: ХХХХХХ",
            Reducer = "Редуктор: ХХХХХХ",
            Year = "Год: ХХХХХХ"
        },
        new Truck
        {
            Name = "Название 3",
            ImageUrl = "/images/trucks/truck3.jpg",
            Engine = "Двигатель: ХХХХХХ",
            Gearbox = "Коробка: ХХХХХХ",
            Reducer = "Редуктор: ХХХХХХ",
            Year = "Год: ХХХХХХ"
        },
        new Truck
        {
            Name = "Название 4",
            ImageUrl = "/images/trucks/truck4.jpg",
            Engine = "Двигатель: ХХХХХХ",
            Gearbox = "Коробка: ХХХХХХ",
            Reducer = "Редуктор: ХХХХХХ",
            Year = "Год: ХХХХХХ"
        },
        new Truck
        {
            Name = "Название 5",
            ImageUrl = "/images/trucks/truck5.jpg",
            Engine = "Двигатель: ХХХХХХ",
            Gearbox = "Коробка: ХХХХХХ",
            Reducer = "Редуктор: ХХХХХХ",
            Year = "Год: ХХХХХХ"
        },
        new Truck
        {
            Name = "Название 6",
            ImageUrl = "/images/trucks/truck6.jpg",
            Engine = "Двигатель: ХХХХХХ",
            Gearbox = "Коробка: ХХХХХХ",
            Reducer = "Редуктор: ХХХХХХ",
            Year = "Год: ХХХХХХ"
        }
    };

    private void LoadMore()
    {
        Console.WriteLine($"LoadMore called. Current visibleCount: {visibleCount}, trucks.Count: {trucks.Count}");
        visibleCount = Math.Min(visibleCount + LoadMoreStep, trucks.Count);
        StateHasChanged();
    }

    private void Search()
    {
        // Логика поиска
    }
}